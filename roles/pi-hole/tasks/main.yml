---
- include_vars: file=vault
  no_log: true

- name: Create config directories
  file: path={{item}} state=directory mode=0755
  with_items:
    - /etc/dnsmasq.d
    - /etc/pihole
  become: true

# TODO extract most of this file into a docker_service module.
- name: pull pi-hole image
  docker_image: name=pihole/pihole:latest force=true
  become: true
  register: pi_hole_image

- name: Install pi-hole service
  copy:
    src: pi-hole.service
    dest: /lib/systemd/system/pi-hole.service
  become: true
  register: pi_hole_service

- name: systemd daemon-reload
  systemd: daemon_reload=true
  become: true
  when: pi_hole_service is changed

- name: Install pi-hole environment file
  template:
    src: pi-hole.env.j2
    dest: /etc/default/pi-hole
    mode: 0600
  become: true
  register: pi_hole_environment

- name: Install pi-hole and dnsmasq config
  copy:
    src: "{{item.src}}"
    dest: "{{item.dest}}"
    mode: 0644
  become: true
  register: pi_hole_config
  with_items:
    - {src: dnsmasq-02-local-hosts.conf, dest: /etc/dnsmasq.d/02-local-hosts.conf}
    - {src: local-hosts.conf, dest: /etc/pihole/local-hosts.conf}
    - {src: whitelist.txt, dest: /etc/pihole/whitelist.txt}

- name: Install blocklist update cronjob
  copy:
    src: "update-gravity.{{item}}"
    dest: "/lib/systemd/system/update-gravity.{{item}}"
  become: true
  with_items: [service, timer]
  register: update_gravity_cronjob

- name: Start and enable services
  service:
    name: "{{item}}"
    state: started
    enabled: true
  become: true
  with_items:
    - pi-hole.service
    - update-gravity.timer

- name: restart pi-hole service
  service:
    name: pi-hole.service
    state: restarted
  become: true
  when: >-
    pi_hole_image is changed
    or pi_hole_service is changed
    or pi_hole_environment is changed
    or pi_hole_config is changed

- name: Restart blocklist update cronjob
  service:
    name: update-gravity.timer
    state: restarted
  become: true
  when: >-
    update_gravity_cronjob is changed

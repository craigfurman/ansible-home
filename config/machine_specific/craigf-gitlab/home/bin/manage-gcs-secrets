#!/usr/bin/env bash
set -euo pipefail

main() {
  if [ "$#" -ne 5 ]; then
    print_usage
    return 1
  fi
  action=$1
  shift

  case "${action}" in
    get)
      get_secret "$@"
      ;;
    edit)
      edit_secret "$@"
      ;;
    *)
      print_usage
      return 1
      ;;
  esac

}

get_secret() {
  project=$1
  keyring=$2
  key=$3
  gs_uri=$4

  gsutil cat "${gs_uri}" | gcloud --project "${project}" kms decrypt \
    --keyring "${keyring}" --location global --key "${key}" \
    --ciphertext-file=- --plaintext-file=-
}

edit_secret() {
  project=$1
  keyring=$2
  key=$3
  gs_uri=$4

  secret_path=$(mktemp)
  trap 'rm ${secret_path}' EXIT

  if gsutil -q stat "${gs_uri}"; then
    gsutil cat "${gs_uri}" |
      gcloud --project "${project}" kms decrypt --keyring "${keyring}" \
        --location global --key "${key}" --ciphertext-file=- \
        --plaintext-file "${secret_path}"
  else
    echo "${gs_uri} does not already exist, will create"
  fi

  ${EDITOR:-vi} "${secret_path}"
  gcloud --project "${project}" kms encrypt --keyring "${keyring}" \
    --location global --key "${key}" --ciphertext-file "${secret_path}" \
    --plaintext-file "${secret_path}"
  gsutil cp "${secret_path}" "${gs_uri}"
}

print_usage() {
  echo "usage: manage-gcs-secrets <get|edit> <project> <keyring> <key> <gs_uri>"
}

main "$@"

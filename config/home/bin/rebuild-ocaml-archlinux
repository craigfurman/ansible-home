# vi: syntax=sh
#!/usr/bin/env bash

set -euo pipefail

# When ocaml is upgraded, and an ocaml AUR package is being compiled that depends on
# another ocaml library that has not been upgraded (i.e. an AUR ocaml dependency that has
# not changed), compilation will fail.

main() {
  remove_top_level_ocaml_packages
  remove_ocaml_aur_packages
	rm -rf ~/.opam
  sudo pacman -Sc --noconfirm
  install_top_level_ocaml_packages
}

remove_top_level_ocaml_packages() {
  # Currently, the only ocaml package that I actually want is google-drive-ocamlfuse
  sudo pacman -Rns --noconfirm google-drive-ocamlfuse || true
}

remove_ocaml_aur_packages() {
  pacman -Sl craig | awk '{print $2}' | egrep 'ocaml|camlidl' \
		| xargs -I% bash -c 'remove_aur_package %'
}

remove_aur_package() {
  pkg=$1

  (
  cd ~/aur-packages
  repose -d craig "$pkg"

  if [ $(ls "$pkg"-* | wc -l) -ne 1 ]; then
    echo "refusing to delete multiple packages: \n$(ls "$pkg"-*). \nDelete $pkg manually"
    return 1
  fi
  rm "$1"-*
  )
}

export -f remove_aur_package

install_top_level_ocaml_packages() {
  aursync --repo craig --root $HOME/aur-packages --no-view --no-confirm google-drive-ocamlfuse
}

main

---
- hosts: all
  remote_user: craig
  vars:
    git_apps:
      chruby: https://github.com/postmodern/chruby.git
      ruby-install:  https://github.com/postmodern/ruby-install.git
      direnv: https://github.com/direnv/direnv.git
      lastpass-cli: https://github.com/lastpass/lastpass-cli.git
    downloads_dir: /tmp/downloads
  tags: [everything]
  tasks:
  - name: add apt repositories
    become: yes
    become_method: sudo
    apt_repository: repo={{ item }}
    with_items:
    - ppa:git-core/ppa
    - ppa:webupd8team/java
    - ppa:neovim-ppa/stable

  - name: add Google Cloud repository
    become: yes
    become_method: sudo
    lineinfile: dest=/etc/apt/sources.list.d/google-cloud-sdk.list line='deb https://packages.cloud.google.com/apt cloud-sdk-xenial main' create=yes

  - name: add Google Cloud repository key
    become: yes
    become_method: sudo
    apt_key: url=https://packages.cloud.google.com/apt/doc/apt-key.gpg

  - name: update apt cache
    become: yes
    become_method: sudo
    apt: update_cache=yes

  - name: Accept Oracle license for Java
    become: yes
    become_method: sudo
    debconf: name='oracle-java8-installer' question='shared/accepted-oracle-license-v1-1' value='true' vtype='select'

  - name: install apt packages
    become: yes
    become_method: sudo
    apt: name={{ item }} state=latest update_cache=yes
    with_items:
    - ack-grep
    - build-essential
    - cmake
    - curl
    - exuberant-ctags
    - fonts-inconsolata
    - git
    - google-cloud-sdk
    - htop
    - mercurial
    - neovim
    - oracle-java8-installer
    - pkg-config
    - python-dev
    - python-pip
    - python3-dev
    - python3-pip
    - silversearcher-ag
    - tree
    - vim
    - vim-nox
    - wget
    - xclip
    - zsh
    # For lastpass CLI
    - openssl
    - libcurl4-openssl-dev
    - libxml2
    - libssl-dev
    - libxml2-dev
    - pinentry-curses
    # For tmux
    - libevent-dev
    - libncurses5-dev

  - name: install pip
    pip: name=pip state=latest extra_args=--user

  - name: install pip3
    pip: name=pip state=latest extra_args=--user executable=/usr/bin/pip3

  - name: install neovim pip package
    pip: name=neovim state=latest extra_args=--user

  - name: install neovim pip3 package
    pip: name=neovim state=latest extra_args=--user executable=~/.local/bin/pip3

  - name: clone oh my zsh
    git: repo=https://github.com/robbyrussell/oh-my-zsh.git dest=~/.oh-my-zsh

  - name: set zsh as default shell
    become: yes
    become_method: sudo
    user: name={{ ansible_env.USER }} shell=/bin/zsh

  - name: clone home repo
    script: home.sh creates='{{ ansible_env.HOME }}/.git'

  - name: ensure downloads directory exists
    file: path={{downloads_dir}} state=directory

  - name: download tmux
    get_url: url=https://github.com/tmux/tmux/releases/download/2.3/tmux-2.3.tar.gz dest={{downloads_dir}}/tmux-2.3.tar.gz

  - name: extract tmux
    unarchive: copy=no src={{downloads_dir}}/tmux-2.3.tar.gz dest={{downloads_dir}} creates={{downloads_dir}}/tmux-2.3

  - name: check tmux installed
    command: tmux -V
    register: tmux_version
    failed_when: tmux_version.rc != 0 and tmux_version.rc != 127

  - name: configure tmux
    command: ./configure chdir={{downloads_dir}}/tmux-2.3
    when: tmux_version.stdout != "tmux 2.3"

  - name: compile tmux
    make: chdir={{downloads_dir}}/tmux-2.3
    when: tmux_version.stdout != "tmux 2.3"

  - name: install tmux
    become: yes
    become_method: sudo
    make: target=install chdir={{downloads_dir}}/tmux-2.3
    when: tmux_version.stdout != "tmux 2.3"

  - name: download go
    get_url: url=https://storage.googleapis.com/golang/go1.8.linux-amd64.tar.gz dest={{downloads_dir}}/go.tar.gz

  - name: extract go
    become: yes
    become_method: sudo
    unarchive: copy=no src={{downloads_dir}}/go.tar.gz dest=/usr/local creates=/usr/local/go

  - name: ensure git-apps directory exists
    file: path=~/git-apps state=directory

  - name: checkout git apps
    git: repo={{ item.value }} dest=~/git-apps/{{ item.key }} force=yes
    with_dict: "{{ git_apps }}"

  - name: generate lastpass CLI makefile
    command: cmake . chdir=~/git-apps/lastpass-cli

  - name: install git apps
    become: yes
    become_method: sudo
    make: target=install chdir={{ ansible_env.HOME }}/git-apps/{{ item.key }}
    with_dict: "{{ git_apps }}"
    environment:
      PATH: /usr/local/go/bin:{{ ansible_env.PATH }}

  - name: clone vim config
    git: repo=https://github.com/luan/vimfiles dest=~/.vim

  - name: install vim config
    command: ~/.vim/update

- hosts: all
  remote_user: craig
  vars:
    downloads_dir: /tmp/downloads
  tags: [desktop, laptop]
  tasks:
  - name: add apt repositories (gui)
    become: yes
    become_method: sudo
    apt_repository: repo=ppa:webupd8team/atom

  - name: add virtualbox repository
    become: yes
    become_method: sudo
    lineinfile: dest=/etc/apt/sources.list line='deb http://download.virtualbox.org/virtualbox/debian xenial contrib'

  - name: add virtualbox repository key
    become: yes
    become_method: sudo
    apt_key: url=https://www.virtualbox.org/download/oracle_vbox_2016.asc

  - name: install apt packages (gui)
    become: yes
    become_method: sudo
    apt: name={{ item }} state=latest update_cache=yes
    with_items:
    - alacarte
    - atom
    - caffeine
    - clipit
    - gparted
    - indicator-multiload
    - lm-sensors
    - network-manager-openvpn-gnome
    - redshift-gtk
    - unity-tweak-tool
    - virtualbox-5.0
    - vlc

  - name: download vagrant
    get_url: url=https://releases.hashicorp.com/vagrant/1.9.1/vagrant_1.9.1_x86_64.deb dest={{downloads_dir}}/vagrant.deb

  - name: install vagrant
    become: yes
    become_method: sudo
    apt: deb={{downloads_dir}}/vagrant.deb

  # Dropbox deb adds its own PPA, trying to update the deb package using apt module will fail
  - name: check dropbox installed
    command: which dropbox
    register: dropbox_installed
    failed_when: dropbox_installed.rc > 1

  - name: download dropbox
    get_url: url=https://www.dropbox.com/download?dl=packages/ubuntu/dropbox_2015.10.28_amd64.deb dest={{downloads_dir}}/dropbox.deb
    when: dropbox_installed.rc != 0

  - name: install dropbox
    become: yes
    become_method: sudo
    apt: deb={{downloads_dir}}/dropbox.deb
    when: dropbox_installed.rc != 0

  # Chrome deb adds its own PPA, trying to update the deb package using apt module will fail
  - name: check chrome installed
    command: which google-chrome
    register: chrome_installed
    failed_when: chrome_installed.rc > 1

  - name: download chrome
    get_url: url=https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb dest={{downloads_dir}}/chrome.deb
    when: chrome_installed.rc != 0

  - name: install chrome
    become: yes
    become_method: sudo
    apt: deb={{downloads_dir}}/chrome.deb
    when: chrome_installed.rc != 0

- hosts: all
  remote_user: craig
  vars:
    downloads_dir: /tmp/downloads
  tags: [desktop]
  tasks:
  - name: download plex
    get_url: url=https://downloads.plex.tv/plex-media-server/1.3.4.3285-b46e0ea/plexmediaserver_1.3.4.3285-b46e0ea_amd64.deb dest=~/Downloads/ansible-home-files/plex.deb dest={{downloads_dir}}/plex.deb

  - name: install plex
    become: yes
    become_method: sudo
    apt: deb={{downloads_dir}}/plex.deb

- hosts: all
  remote_user: craig
  tags: [laptop]
  tasks:
  - name: add tlp apt repository
    become: yes
    become_method: sudo
    apt_repository: repo=ppa:linrunner/tlp

  - name: install laptop packages
    become: yes
    become_method: sudo
    apt: name={{ item }} state=latest
    with_items:
    - tlp
    - xbacklight

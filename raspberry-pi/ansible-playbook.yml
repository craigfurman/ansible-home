---
- name: raspberry-pi
  hosts: all
  remote_user: &user pi
  become_method: sudo

  vars:
    # TODO subscribe to the WireGuard mailing list to get snapshot/release announcements.
    wireguard_version: 0.0.20181218

  tasks:
    - name: Install apt packages
      apt:
        name: "{{packages}}"
        update_cache: true
      become: true
      vars:
        packages:
          - dnsutils
          - git
          - python-pip
          - raspberrypi-kernel-headers  # For compiling wireguard
          - vim-tiny
          - zsh

    - name: Install docker module for docker_image task
      pip:
        name: docker
      become: true

    - name: Install zshrc
      copy:
        src: config/.zshrc
        dest: ~/.zshrc
        mode: 0644

    - name: Install oh-my-zsh
      git: repo=https://github.com/robbyrussell/oh-my-zsh.git dest=~/.oh-my-zsh

    - name: chsh to zsh
      user:
        name: *user
        shell: /usr/bin/zsh
      become: true

    - name: Check if docker installed
      ignore_errors: true
      register: docker_installed
      command: which docker

    - name: Download Docker install script
      get_url:
        url: https://get.docker.com
        dest: /tmp/get-docker.sh
        mode: 0755
      when: docker_installed is failed

    - name: Install Docker
      command: /tmp/get-docker.sh
      become: true
      when: docker_installed is failed

    - name: Create config directories
      file: path={{item}} state=directory mode=0755
      with_items:
        - /etc/dnsmasq.d
        - /etc/pihole
      become: true

    - name: pull pi-hole image
      docker_image:
        name: pihole/pihole:latest
        force: true
      become: true
      register: pi_hole_image

    - name: Install pi-hole service
      copy:
        src: config/pi-hole.service
        dest: /lib/systemd/system/pi-hole.service
      become: true
      register: pi_hole_service

    - name: systemd daemon-reload
      systemd:
        daemon_reload: true
      become: true
      when: pi_hole_service is changed

    - include_vars: admin-dashboard-password.yml
      no_log: true

    - name: Install pi-hole environment file
      template:
        src: config/pi-hole.env.j2
        dest: /etc/default/pi-hole
        mode: 0600
      become: true
      register: pi_hole_environment

    - name: Install pi-hole and dnsmasq config
      template:
        src: "{{item.src}}"
        dest: "{{item.dest}}"
        mode: 0644
      become: true
      register: pi_hole_config
      with_items:
        - {src: config/dnsmasq-02-local-hosts.conf, dest: /etc/dnsmasq.d/02-local-hosts.conf}
        - {src: config/local-hosts.conf, dest: /etc/pihole/local-hosts.conf}

    - name: start and enable pi-hole service
      service:
        name: pi-hole.service
        state: started
        enabled: true
      become: true

    - name: restart pi-hole service
      service:
        name: pi-hole.service
        state: restarted
      become: true
      when: >-
        pi_hole_image is changed
        or pi_hole_service is changed
        or pi_hole_environment is changed
        or pi_hole_config is changed

    # WireGuard
    - name: Create src directory
      file: path=~/src state=directory mode=0755

    - name: Download WireGuard source
      unarchive:
        src: https://git.zx2c4.com/WireGuard/snapshot/WireGuard-{{wireguard_version}}.tar.xz
        dest: ~/src
        creates: ~/src/WireGuard-{{wireguard_version}}
        remote_src: true
      register: wireguard_src

    - name: Compile WireGuard
      command: make -j3  # Leave 1 core unused
      args:
        chdir: ~/src/WireGuard-{{wireguard_version}}/src
      when: wireguard_src is changed

    - name: Install WireGuard
      command: make install
      args:
        chdir: ~pi/src/WireGuard-{{wireguard_version}}/src
      become: true
      when: wireguard_src is changed
